def label = "load-test-${UUID.randomUUID().toString()}"
podTemplate(
	label: label,
	name: label,
	imagePullSecrets: ['neugcstieacr01'],
	containers: [
		containerTemplate(
			name: label,
			image: 'neugcstieacr01.azurecr.io/node/nodejs-build:v1',
			command: 'cat',
			ttyEnabled: true,
			alwaysPullImage: true
		)
	],
	volumes: [
		hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
	]
){
	properties([
		[$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', numToKeepStr: '10']],
		disableConcurrentBuilds()
	])
	node(label) {
		container(label) {
            stage('Clone') {
				try {
					dir('reactuiboilerplate') {
						checkout scm
						//git branch: 'develop', credentialsId: 'git_creds', url: ''
						//sh 'npm install'
					}
				} catch (exc) {
					currentBuild.result = "FAILURE"
					throw exc
				} finally {
				}
			}
			stage ('Load Test') {
				dir('reactuiboilerplate') {
					try {
                        sh 'npm run load-test -- -e dev'
                        sh 'npm run load-test-report'
                    } catch (exc) {
                        // currentBuild.result = "FAILURE"
                        // throw exc
                    } finally {
                        publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'test/load/reports', reportFiles: 'index.html', reportName: 'Load Test Result', reportTitles: 'Load Test Report'])
                    }
				}
			}
		}
	}
}
